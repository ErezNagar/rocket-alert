{"version":3,"sources":["components/FadeIn.js","components/Tile.js","logo.svg","components/Header.js","components/MoveIn.js","pinicon.svg","components/LiveAlerts.js","components/AlertModeHeader.js","components/FadeInOut.js","components/StickyHeader.js","components/PreviousOperations.js","date_helper.js","components/PreviousStats.js","components/Map.js","components/Footer.js","components/FAQ.js","rocket_alert_client.ts","util.js","realtime_alert_manager.js","App.js","index.js"],"names":["FadeIn","show","children","useState","render","setRender","useEffect","style","animation","onAnimationEnd","LoadingTile","showAverage","gutter","justify","className","indicator","LoadingOutlined","fontSize","color","spin","defaultProps","HeroTile","isLoading","title","alerts","fadeInOnly","value","Tile","state","isError","getAlerts","props","alertsClient","getTotalAlerts","fromDate","toDate","then","res","isHeroTile","setState","duration","differenceInDays","Date","average","Math","round","payload","setTimeout","floor","random","catch","error","console","this","hasData","subtitle","ExclamationCircleOutlined","React","Component","formatISO","representation","Header","src","logo","alt","getYesterday","alertClient","href","TwitterOutlined","MoveIn","shouldShow","LiveAlerts","shouldRefreshAlert","incomingAlerts","newAlert","alertList","showNewAlert","i","setInterval","length","map","alert","pinIcon","AlertModeHeader","xs","sm","lg","FadeInOut","AlertModeStickyHeader","shouldRefresh","showAlert","setStickyHeaderStyle","cssClass","showStickyHeader","isAlertMode","prevProps","realTimeAlert","name","PreviousOperations","md","format","date","yesterday","subDays","getWeekBack","weekBack","subWeeks","getMonthBack","monthBack","subMonths","getYearBack","yearBack","subYears","PreviousStats","Map","Footer","FAQ","SERVER_URL","api","wretch","AlertClient","getTotalAlertsByDay","from","to","isValid","url","query","get","json","Promise","reject","Error","getRealTimeAlertEventSource","EventSource","Util","isDev","process","RealTimeAlertManager","alertEventSource","alertInterval","alertQueue","startRealTimeAlerts","cb","onopen","log","processAlert","addEventListener","e","data","shift","push","onerror","isLastAlert","stopRealTimeAlerts","close","clearInterval","counter","App","startfadeInEffect","isAlertModeQueryString","queryString","parse","window","location","search","queryKeys","Object","keys","toLowerCase","JSON","mockIncomingAlerts","post","handleScroll","vh80","innerHeight","scrollY","removeEventListener","StickyHeader","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ab8981f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FadeIn = ({ show, children }) => {\r\n  const [render, setRender] = useState(show);\r\n\r\n  useEffect(() => {\r\n    if (show) setRender(true);\r\n  }, [show]);\r\n\r\n  const onAnimationEnd = () => {\r\n    if (!show) setRender(false);\r\n  };\r\n\r\n  const getStyle = () => (show ? `fadeIn 400ms` : \"none\");\r\n\r\n  return (\r\n    render && (\r\n      <div style={{ animation: getStyle() }} onAnimationEnd={onAnimationEnd}>\r\n        {children}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nFadeIn.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default FadeIn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatISO, differenceInDays } from \"date-fns\";\r\nimport { Row, Col, Statistic, Spin } from \"antd\";\r\nimport { LoadingOutlined, ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport FadeIn from \"./FadeIn\";\r\n\r\nconst LoadingTile = ({ showAverage }) => (\r\n  <Row\r\n    gutter={[8]}\r\n    justify=\"center\"\r\n    className={showAverage ? \"loading-average\" : \"loading-basic\"}\r\n  >\r\n    <Col>\r\n      <Spin\r\n        indicator={\r\n          <LoadingOutlined style={{ fontSize: 24, color: \"black\" }} spin />\r\n        }\r\n      />\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nLoadingTile.propTypes = {\r\n  showAverage: PropTypes.bool,\r\n};\r\nLoadingTile.defaultProps = {\r\n  showAverage: false,\r\n};\r\n\r\nconst HeroTile = ({ isLoading, title, alerts }) => (\r\n  <div className=\"tile-hero\">\r\n    <FadeIn show={!isLoading} fadeInOnly>\r\n      <Statistic value={alerts} />\r\n    </FadeIn>\r\n    <h3>{title}</h3>\r\n  </div>\r\n);\r\n\r\nHeroTile.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  alerts: PropTypes.number,\r\n};\r\nHeroTile.defaultProps = {\r\n  isLoading: false,\r\n  title: \"\",\r\n  alerts: 0,\r\n};\r\n\r\nexport default class Tile extends React.Component {\r\n  static propTypes = {\r\n    isHeroTile: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    subtitle: PropTypes.string,\r\n    fromDate: PropTypes.string.isRequired,\r\n    toDate: PropTypes.string,\r\n    alertsClient: PropTypes.object.isRequired,\r\n    showAverage: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    isHeroTile: false,\r\n    title: \"\",\r\n    subtitle: \"\",\r\n    toDate: formatISO(new Date(), {\r\n      representation: \"date\",\r\n    }),\r\n    showAverage: false,\r\n  };\r\n\r\n  state = { isLoading: true, isError: false, alerts: null };\r\n\r\n  componentDidMount() {\r\n    this.getAlerts();\r\n  }\r\n\r\n  getAlerts = () => {\r\n    this.props.alertsClient\r\n      .getTotalAlerts(this.props.fromDate, this.props.toDate)\r\n      /*\r\n        error: null\r\n        payload: 7325\r\n        success: true\r\n      */\r\n      // .getTotalAlertsByDay(this.props.fromDate, this.props.fromDate)\r\n      /*\r\n      [{\r\n        alerts: 37\r\n        timeStamp: \"2014-07-24\"\r\n      }]\r\n      */\r\n      .then((res) => {\r\n        if (this.props.isHeroTile) {\r\n          this.setState({ alerts: 7325, isLoading: false });\r\n        } else {\r\n          if (this.props.showAverage) {\r\n            const duration = differenceInDays(\r\n              new Date(this.props.toDate),\r\n              new Date(this.props.fromDate)\r\n            );\r\n            this.setState({\r\n              average: Math.round(res.payload / duration),\r\n            });\r\n          }\r\n          setTimeout(() => {\r\n            this.setState({ alerts: res.payload, isLoading: false });\r\n          }, Math.floor(Math.random() * 4) * 1000);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        this.setState({ isError: true });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const hasData = !this.state.isLoading && !this.state.isError;\r\n\r\n    return (\r\n      <>\r\n        {this.props.isHeroTile ? (\r\n          <HeroTile alerts={7325} />\r\n        ) : (\r\n          <div className=\"tile\">\r\n            <h3>{this.props.title}</h3>\r\n            <div className=\"subtitle\">{this.props.subtitle}</div>\r\n            <div>\r\n              {this.state.isLoading && <LoadingTile {...this.props} />}\r\n              {hasData && this.props.showAverage && (\r\n                <Row\r\n                  gutter={[8]}\r\n                  justify=\"center\"\r\n                  className=\"average-container\"\r\n                >\r\n                  <Col>\r\n                    <div className=\"alerts\">\r\n                      <FadeIn show={!this.state.isLoading} fadeInOnly>\r\n                        <Statistic value={this.state.alerts} />\r\n                      </FadeIn>\r\n                    </div>\r\n                    <div>Total</div>\r\n                  </Col>\r\n                  <Col className=\"separator\">.</Col>\r\n                  <Col>\r\n                    <div className=\"average\">\r\n                      <FadeIn show={!this.state.isLoading} fadeInOnly>\r\n                        <Statistic value={this.state.average} />\r\n                      </FadeIn>\r\n                    </div>\r\n                    <div>Avg/Day</div>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n              {hasData && !this.props.showAverage && (\r\n                <div className=\"alerts\">\r\n                  <FadeIn show={!this.state.isLoading} fadeInOnly>\r\n                    <Statistic value={this.state.alerts} />\r\n                  </FadeIn>\r\n                </div>\r\n              )}\r\n              {this.state.isError && (\r\n                <FadeIn show={!this.state.isLoading} fadeInOnly>\r\n                  <ExclamationCircleOutlined\r\n                    className={\r\n                      this.props.showAverage\r\n                        ? \"loading-average\"\r\n                        : \"loading-basic\"\r\n                    }\r\n                  />\r\n                  {\" Error\"}\r\n                </FadeIn>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.517fc583.svg\";","import PropTypes from \"prop-types\";\r\nimport Tile from \"./Tile\";\r\nimport { TwitterOutlined } from \"@ant-design/icons\";\r\nimport logo from \"../logo.svg\";\r\n\r\nconst Header = (props) => (\r\n  <header className=\"header\">\r\n    <div className=\"top\">\r\n      <img className=\"logo\" src={logo} alt=\"\" />\r\n      <h2>Real-time rocket alerts in Israel</h2>\r\n    </div>\r\n    <Tile\r\n      isHeroTile\r\n      title={\"alerts today\"}\r\n      subtitle={props.getYesterday()}\r\n      fromDate={props.getYesterday()}\r\n      alertsClient={props.alertClient}\r\n    />\r\n    <div className=\"share\">\r\n      <a\r\n        href=\"https://twitter.com/intent/tweet?button_hashtag=RocketAlert&ref_src=twsrc%5Etfw\"\r\n        data-show-count=\"false\"\r\n        data-text=\"custom share text\"\r\n        data-url=\"https://dev.twitter.com/web/tweet-button\"\r\n        data-hashtags=\"example,demo\"\r\n        data-via=\"twitterdev\"\r\n        data-related=\"twitterapi,twitter\"\r\n      >\r\n        <div>\r\n          <TwitterOutlined style={{ fontSize: \"24px\", color: \"white\" }} />\r\n        </div>\r\n        <div>#RocketAlerts</div>\r\n      </a>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  getYesterday() {},\r\n  alertClient: PropTypes.object.isRequired,\r\n};\r\n\r\nHeader.defaultProps = {\r\n  getYesterday: () => {},\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MoveIn = ({ shouldShow, children }) => {\r\n  const [render, setRender] = useState(shouldShow);\r\n\r\n  useEffect(() => {\r\n    if (shouldShow) setRender(true);\r\n  }, [shouldShow]);\r\n\r\n  const onAnimationEnd = () => {\r\n    if (!shouldShow) setRender(false);\r\n  };\r\n\r\n  const getStyle = () => (shouldShow ? `moveIn 400ms` : \"none\");\r\n\r\n  return (\r\n    render && (\r\n      <div style={{ animation: getStyle() }} onAnimationEnd={onAnimationEnd}>\r\n        {children}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nMoveIn.propTypes = {\r\n  shouldShow: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default MoveIn;\r\n","export default __webpack_public_path__ + \"static/media/pinicon.048d0e71.svg\";","import React from \"react\";\r\nimport MoveIn from \"./MoveIn\";\r\nimport pinIcon from \"../pinicon.svg\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass LiveAlerts extends React.Component {\r\n  state = {\r\n    shouldRefreshAlert: false,\r\n    incomingAlerts: [\r\n      \"15:24: Nahal Oz\",\r\n      \"15:24: Nativ Haasara\",\r\n      \"15:24: Sderot\",\r\n      \"15:25: Beersheba\",\r\n      \"15:25: Mefalsim\",\r\n      \"15:25: Tkuma\",\r\n      \"15:25: Nahal Oz\",\r\n      \"15:25: Nativ Haasara\",\r\n      \"15:26: Sderot\",\r\n      \"15:26: Beersheba\",\r\n      \"15:27: Mefalsim\",\r\n      \"15:27: Tkuma\",\r\n    ],\r\n    newAlert: \"\",\r\n    alertList: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    let i = 0;\r\n    // TODO: Clear interval\r\n    setInterval(() => {\r\n      this.showNewAlert(this.state.incomingAlerts[i++]);\r\n      if (i === this.state.incomingAlerts.length) {\r\n        i = 0;\r\n      }\r\n    }, 2000);\r\n  }\r\n\r\n  showNewAlert = (newAlert) => {\r\n    const alertList = [newAlert, ...this.state.alertList];\r\n    setTimeout(() => {\r\n      this.setState({\r\n        alertList,\r\n        shouldRefreshAlert: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          shouldRefreshAlert: false,\r\n        });\r\n      }, 1500);\r\n    }, 1);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"live-alerts-container\">\r\n        <h2>Alerts now</h2>\r\n        <div className=\"alerts\">\r\n          {this.state.alertList.map((alert, i) => (\r\n            <MoveIn\r\n              shouldShow={this.state.shouldRefreshAlert}\r\n              key={`${alert}_${i}`}\r\n            >\r\n              <div className=\"alert-item\">\r\n                <img className=\"pin-icon\" src={pinIcon} alt=\"alert\" />\r\n                {alert}\r\n              </div>\r\n            </MoveIn>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LiveAlerts;\r\n","import PropTypes from \"prop-types\";\r\nimport Tile from \"./Tile\";\r\nimport LiveAlerts from \"./LiveAlerts\";\r\nimport { Row, Col } from \"antd\";\r\nimport logo from \"../logo.svg\";\r\n\r\nconst AlertModeHeader = (props) => (\r\n  <header className=\"header alert-mode\">\r\n    <Row>\r\n      <Col xs={24} sm={15} lg={15}>\r\n        <div className=\"title\">\r\n          <img className=\"logo\" src={logo} alt=\"\" />\r\n          <h2>Real-time rocket alerts in Israel</h2>\r\n        </div>\r\n        <Tile\r\n          isHeroTile\r\n          title={\"alerts today\"}\r\n          subtitle={props.getYesterday()}\r\n          fromDate={props.getYesterday()}\r\n          alertsClient={props.alertClient}\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={9} lg={9}>\r\n        <LiveAlerts />\r\n      </Col>\r\n    </Row>\r\n  </header>\r\n);\r\n\r\nAlertModeHeader.propTypes = {\r\n  getYesterday() {},\r\n  alertClient: PropTypes.object.isRequired,\r\n};\r\n\r\nAlertModeHeader.defaultProps = {\r\n  getYesterday: () => {},\r\n};\r\n\r\nexport default AlertModeHeader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FadeInOut = ({ show, children }) => {\r\n  const [render, setRender] = useState(show);\r\n\r\n  useEffect(() => {\r\n    if (show) setRender(true);\r\n  }, [show]);\r\n\r\n  const onAnimationEnd = () => {\r\n    if (!show) setRender(false);\r\n  };\r\n\r\n  const getStyle = () => (show ? `fadeIn 400ms` : `fadeOut 400ms`);\r\n\r\n  return (\r\n    render && (\r\n      <div style={{ animation: getStyle() }} onAnimationEnd={onAnimationEnd}>\r\n        {children}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nFadeInOut.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default FadeInOut;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FadeInOut from \"./FadeInOut\";\r\nimport { TwitterOutlined } from \"@ant-design/icons\";\r\nimport { Statistic } from \"antd\";\r\nimport logo from \"../logo.svg\";\r\n\r\nclass AlertModeStickyHeader extends React.Component {\r\n  static propTypes = {\r\n    showStickyHeader: PropTypes.bool,\r\n    isAlertMode: PropTypes.bool,\r\n    realTimeAlert: PropTypes.object,\r\n  };\r\n\r\n  static defaultProps = {\r\n    showStickyHeader: false,\r\n    isAlertMode: false,\r\n    realTimeAlert: {},\r\n  };\r\n\r\n  state = {\r\n    shouldRefresh: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.realTimeAlert !== prevProps.realTimeAlert) {\r\n      this.showAlert(this.props.realTimeAlert);\r\n    }\r\n  }\r\n\r\n  showAlert = (alert) => {\r\n    this.setState({\r\n      shouldRefresh: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ shouldRefresh: false });\r\n    }, 2000);\r\n  };\r\n\r\n  setStickyHeaderStyle = () => {\r\n    let cssClass = \"sticky-header\";\r\n    if (this.props.showStickyHeader) {\r\n      cssClass += \" active\";\r\n    }\r\n    if (this.props.isAlertMode) {\r\n      cssClass += \" alert-mode\";\r\n    }\r\n    return cssClass;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className={this.setStickyHeaderStyle()}>\r\n        <div className=\"left-container\">\r\n          <div>\r\n            <img className=\"logo\" src={logo} alt=\"\" />\r\n          </div>\r\n          <div className=\"alerts\">\r\n            <Statistic value={7325} />\r\n          </div>\r\n          {this.props.isAlertMode && this.props.realTimeAlert && (\r\n            <div>\r\n              <FadeInOut show={this.state.shouldRefresh}>\r\n                {`Rocket alert: ${this.props.realTimeAlert.name}`}\r\n              </FadeInOut>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"right-container\">\r\n          <TwitterOutlined style={{ fontSize: \"24px\", color: \"white\" }} />\r\n          #RocketAlerts\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertModeStickyHeader;\r\n","import PropTypes from \"prop-types\";\r\nimport { Row, Col } from \"antd\";\r\nimport Tile from \"./Tile\";\r\n\r\nconst PreviousOperations = (props) => (\r\n  <section className=\"section\">\r\n    <h2>Previous operations</h2>\r\n    <Row gutter={[24, 24]}>\r\n      <Col xs={24} sm={12} md={8} lg={6}>\r\n        <Tile\r\n          title={\"Operation Cast Lead\"}\r\n          subtitle={\"27 Dec 2008 - 18 Jan 2009\"}\r\n          fromDate={\"2008-12-27\"}\r\n          toDate={\"2009-01-18\"}\r\n          alertsClient={props.alertsClient}\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={12} md={8} lg={6}>\r\n        <Tile\r\n          title={\"Operation Pillar of Defense\"}\r\n          subtitle={\"14 Nov 2012 - 21 Nov 2012\"}\r\n          fromDate={\"2012-11-14\"}\r\n          toDate={\"2012-11-21\"}\r\n          alertsClient={props.alertsClient}\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={12} md={8} lg={6}>\r\n        <Tile\r\n          title={\"Operation Protective Edge\"}\r\n          subtitle={\"8 July 2014 - 26 Aug 2014\"}\r\n          fromDate={\"2014-07-08\"}\r\n          toDate={\"2014-08-26\"}\r\n          alertsClient={props.alertsClient}\r\n          showAverage\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={12} md={8} lg={6}>\r\n        <Tile\r\n          title={\"Operation Black Belt\"}\r\n          subtitle={\"12 Nov 2019 - 16 Nov 2019\"}\r\n          fromDate={\"2019-11-12\"}\r\n          toDate={\"2019-11-16\"}\r\n          alertsClient={props.alertsClient}\r\n          showAverage\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={12} md={8} lg={6}>\r\n        <Tile\r\n          title={\"Operation Guardian of the Walls\"}\r\n          subtitle={\"10 May 2021 - 21 May 2021\"}\r\n          fromDate={\"2021-05-10\"}\r\n          toDate={\"2021-05-21\"}\r\n          alertsClient={props.alertsClient}\r\n          showAverage\r\n        />\r\n      </Col>\r\n    </Row>\r\n  </section>\r\n);\r\n\r\nPreviousOperations.propTypes = {\r\n  alertsClient: PropTypes.object.isRequired,\r\n  showAverage: PropTypes.bool,\r\n};\r\nPreviousOperations.defaultProps = {\r\n  showAverage: false,\r\n};\r\nexport default PreviousOperations;\r\n","import {\r\n  subDays,\r\n  subWeeks,\r\n  subMonths,\r\n  subYears,\r\n  startOfWeek,\r\n  startOfMonth,\r\n  startOfYear,\r\n  formatISO,\r\n} from \"date-fns\";\r\n\r\nconst format = (date) =>\r\n  formatISO(date, {\r\n    representation: \"date\",\r\n  });\r\n\r\nexport const getYesterday = () => {\r\n  const yesterday = subDays(new Date(), 1);\r\n  return format(yesterday);\r\n};\r\n\r\nexport const getWeekBack = () => {\r\n  const weekBack = subWeeks(new Date(), 1);\r\n  return format(weekBack);\r\n};\r\n\r\nexport const getMonthBack = () => {\r\n  const monthBack = subMonths(new Date(), 1);\r\n  return format(monthBack);\r\n};\r\n\r\nexport const getYearBack = () => {\r\n  const yearBack = subYears(new Date(), 1);\r\n  return format(yearBack);\r\n};\r\n\r\nexport const getBeginningOfWeek = () => {\r\n  // Week starts on Sunday\r\n  const beginning = startOfWeek(new Date());\r\n  return format(beginning);\r\n};\r\n\r\nexport const getBeginningOfMonth = () => {\r\n  const beginning = startOfMonth(new Date());\r\n  return format(beginning);\r\n};\r\nexport const getBeginningOfYear = () => {\r\n  const beginning = startOfYear(new Date());\r\n  return format(beginning);\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { Row, Col } from \"antd\";\r\nimport Tile from \"./Tile\";\r\nimport {\r\n  getYesterday,\r\n  getWeekBack,\r\n  getMonthBack,\r\n  getYearBack,\r\n} from \"../date_helper\";\r\n\r\nconst PreviousStats = (props) => (\r\n  <section className=\"section\">\r\n    <h2>.</h2>\r\n    <Row gutter={[24, 24]}>\r\n      <Col xs={24} sm={12} md={8} lg={6}>\r\n        <Tile\r\n          title={\"Yesterday\"}\r\n          subtitle={getYesterday()}\r\n          fromDate={getYesterday()}\r\n          alertsClient={props.alertsClient}\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={12} md={8} lg={6}>\r\n        <Tile\r\n          title={\"Past Week\"}\r\n          subtitle={`Since ${getWeekBack()}`}\r\n          fromDate={getWeekBack()}\r\n          alertsClient={props.alertsClient}\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={12} md={8} lg={6}>\r\n        <Tile\r\n          title={\"Past Month\"}\r\n          subtitle={`Since ${getMonthBack()}`}\r\n          fromDate={getMonthBack()}\r\n          alertsClient={props.alertsClient}\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={12} md={8} lg={6}>\r\n        <Tile\r\n          title={\"Past Year\"}\r\n          subtitle={`Since ${getYearBack()}`}\r\n          fromDate={getYearBack()}\r\n          alertsClient={props.alertsClient}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  </section>\r\n);\r\n\r\nPreviousStats.propTypes = {\r\n  alertsClient: PropTypes.object.isRequired,\r\n};\r\nexport default PreviousStats;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Map = () => (\r\n  <section className=\"section\">\r\n    <h2>Map</h2>\r\n  </section>\r\n);\r\n\r\nMap.propTypes = {};\r\n\r\nMap.defaultProps = {};\r\n\r\nexport default Map;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Footer = () => <footer></footer>;\r\n\r\nFooter.propTypes = {};\r\n\r\nFooter.defaultProps = {};\r\n\r\nexport default Footer;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst FAQ = () => (\r\n  <section className=\"section faq\">\r\n    <h2>Frequently Asked Questions</h2>\r\n  </section>\r\n);\r\n\r\nFAQ.propTypes = {};\r\n\r\nFAQ.defaultProps = {};\r\n\r\nexport default FAQ;\r\n","import wretch from \"wretch\";\r\nimport isValid from \"date-fns/isValid\";\r\n\r\nconst SERVER_URL = \"https://ra-agg.kipodopik.com/api/v1/alerts\";\r\nconst api = wretch(SERVER_URL);\r\n\r\nconst AlertClient = {\r\n  /*\r\n   *  Gets total alert count by day for the given date range\r\n   *  @param {string} from  from date, inclusive\r\n   *  @param {string} to    to date, exclusive\r\n   *  @return {object}\r\n   */\r\n  getTotalAlertsByDay: (from: string, to: string): any => {\r\n    if (!from || !isValid(new Date(from))) {\r\n      return Promise.reject(new Error(\"Invalid Date: from\"));\r\n    }\r\n    if (!to || !isValid(new Date(to))) {\r\n      return Promise.reject(new Error(\"Invalid Date: to\"));\r\n    }\r\n    return api.url(\"/daily\").query({ from, to }).get().json();\r\n  },\r\n\r\n  /*\r\n   *  Gets total alert count for the given date range\r\n   *  @param {string} from  from date, inclusive\r\n   *  @param {string} to    to date, exclusive\r\n   *  @return {object}\r\n   */\r\n  getTotalAlerts: (from: string, to: string): any => {\r\n    if (!from || !isValid(new Date(from))) {\r\n      return Promise.reject(new Error(\"Invalid Date: from\"));\r\n    }\r\n    if (!to || !isValid(new Date(to))) {\r\n      return Promise.reject(new Error(\"Invalid Date: to\"));\r\n    }\r\n    return api.url(\"/total\").query({ from, to }).get().json();\r\n  },\r\n\r\n  /*\r\n   *  Opens a persistent connection for interfacing with the server-sent events\r\n   *  @param {string} url   url of the event source\r\n   *  @return {EventSource} the EventSource instance\r\n   */\r\n  getRealTimeAlertEventSource: (url = `${SERVER_URL}/real-time`) =>\r\n    new EventSource(url),\r\n};\r\n\r\nexport default AlertClient;\r\n","const Util = {\r\n  isDev: () => process.env.NODE_ENV === \"development\",\r\n};\r\n\r\nexport default Util;\r\n","import Util from \"./util\";\r\n\r\n// Display time + total transition time;\r\nconst THROTTLE = 3000;\r\n\r\n/* Keep max of 30 most recent alerts.\r\n * In case of a single, relatively short barrage, this will most likely capture all or most of the alerts.\r\n * In case of multiple, long barrages, we'll onnly keep the MAX_QUEUE_SIZE most recent alerts,\r\n * which will allow us THROTTLE * MAX_QUEUE_SIZE = 90 seconds to show all alerts\r\n */\r\nconst MAX_QUEUE_SIZE = 30;\r\nconst RealTimeAlertManager = {\r\n  alertEventSource: null,\r\n  alertInterval: null,\r\n  alertQueue: [],\r\n\r\n  /*\r\n   *  Connects to the real-time alert source and listens for incoming alerts\r\n   *  @param {object}   alertClient The alert client\r\n   *  @param {func}     cb          Callback function to process incoming alerts\r\n   */\r\n  startRealTimeAlerts: (alertClient, cb) => {\r\n    RealTimeAlertManager.alertEventSource =\r\n      alertClient.getRealTimeAlertEventSource();\r\n    RealTimeAlertManager.alertEventSource.onopen = () => {\r\n      if (Util.isDev()) {\r\n        console.log(\"Connection to server opened\");\r\n      }\r\n      RealTimeAlertManager.processAlert(cb);\r\n    };\r\n    RealTimeAlertManager.alertEventSource.addEventListener(\"message\", (e) => {\r\n      if (Util.isDev()) {\r\n        console.log(\"Incoming alert: \", e.data);\r\n      }\r\n      if (RealTimeAlertManager.alertQueue.length === MAX_QUEUE_SIZE) {\r\n        RealTimeAlertManager.alertQueue.shift();\r\n      }\r\n      RealTimeAlertManager.alertQueue.push(e.data);\r\n    });\r\n    RealTimeAlertManager.alertEventSource.onerror = () => {\r\n      if (Util.isDev()) {\r\n        console.log(\"EventSource failed.\");\r\n      }\r\n    };\r\n  },\r\n\r\n  /*\r\n   * Processes an alert from the queue in intervals of THROTTLE ms,\r\n   * until there are no more alerts left in the queue\r\n   *  @param {func} cb  Callback function to process incoming alerts\r\n   */\r\n  processAlert: (cb) => {\r\n    RealTimeAlertManager.alertInterval = setInterval(() => {\r\n      if (RealTimeAlertManager.alertQueue.length > 0) {\r\n        const alert = RealTimeAlertManager.alertQueue.shift();\r\n        const isLastAlert = RealTimeAlertManager.alertQueue.length === 0;\r\n        cb(alert, isLastAlert);\r\n      }\r\n    }, THROTTLE);\r\n  },\r\n\r\n  /*\r\n   * Closes the real-time alert source\r\n   */\r\n  stopRealTimeAlerts: () => {\r\n    if (RealTimeAlertManager.alertEventSource) {\r\n      RealTimeAlertManager.alertEventSource.close();\r\n      clearInterval(RealTimeAlertManager.alertInterval);\r\n    }\r\n  },\r\n};\r\n\r\nexport default RealTimeAlertManager;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport AlertModeHeader from \"./components/AlertModeHeader\";\r\nimport StickyHeader from \"./components/StickyHeader\";\r\nimport PreviousOperations from \"./components/PreviousOperations\";\r\nimport PreviousStats from \"./components/PreviousStats\";\r\nimport Map from \"./components/Map\";\r\nimport Footer from \"./components/Footer\";\r\nimport FAQ from \"./components/FAQ\";\r\nimport AlertClient from \"./rocket_alert_client\";\r\nimport RealTimeAlertManager from \"./realtime_alert_manager\";\r\nimport Util from \"./util\";\r\nimport queryString from \"query-string\";\r\nimport { getYesterday } from \"./date_helper\";\r\nimport wretch from \"wretch\";\r\n\r\nlet counter = 0;\r\nclass App extends React.Component {\r\n  state = {\r\n    alerts: {},\r\n    showStickyHeader: false,\r\n    startfadeInEffect: false,\r\n    isAlertMode: false,\r\n    realTimeAlert: null,\r\n  };\r\n\r\n  alertEventSource = null;\r\n\r\n  /*\r\n   * Checks whether the Alert Mode query string is set. Dev only.\r\n   */\r\n  isAlertModeQueryString = () => {\r\n    const query = queryString.parse(window.location.search);\r\n    const queryKeys = Object.keys(query);\r\n    if (queryKeys.length !== 1) {\r\n      return false;\r\n    }\r\n    return queryKeys[0].toLowerCase() === \"mode\" &&\r\n      query[queryKeys[0]] === \"alert\"\r\n      ? true\r\n      : false;\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.startRealTimeAlerts();\r\n    this.mockIncomingAlerts();\r\n\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    this.setState({\r\n      startfadeInEffect: true,\r\n      isAlertMode: this.isAlertModeQueryString(),\r\n    });\r\n  }\r\n\r\n  startRealTimeAlerts = () => {\r\n    RealTimeAlertManager.startRealTimeAlerts(\r\n      AlertClient,\r\n      (alert, isLastAlert) => {\r\n        if (Util.isDev()) {\r\n          console.log(\"Processing alert\", alert);\r\n        }\r\n        this.setState({\r\n          realTimeAlert: JSON.parse(alert),\r\n          isAlertMode: isLastAlert ? false : true,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  /*\r\n   * Mock incoming alerts by hitting the server.\r\n   * Wait 3 seconds before initiating requests. After which, call the server in intervals\r\n   */\r\n  mockIncomingAlerts = () => {\r\n    if (!Util.isDev()) {\r\n      return;\r\n    }\r\n    setInterval(() => {\r\n      wretch(\r\n        `https://ra-agg.kipodopik.com/api/v1/alerts/real-time?token=BHHWEIP221a547&data=test${++counter}`\r\n      )\r\n        .post()\r\n        .res()\r\n        .catch((e) => console.log(\"e\", e));\r\n    }, 3000);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n    RealTimeAlertManager.stopRealTimeAlerts();\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    const vh80 = window.innerHeight * 0.8;\r\n    this.setState({\r\n      showStickyHeader: window.scrollY > Math.floor(vh80) ? true : false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          this.state.startfadeInEffect\r\n            ? \"pageContainer active\"\r\n            : \"pageContainer\"\r\n        }\r\n      >\r\n        {this.state.isAlertMode ? (\r\n          <AlertModeHeader\r\n            getYesterday={getYesterday}\r\n            alertClient={AlertClient}\r\n          />\r\n        ) : (\r\n          <Header getYesterday={getYesterday} alertClient={AlertClient} />\r\n        )}\r\n        <StickyHeader\r\n          showStickyHeader={this.state.showStickyHeader}\r\n          isAlertMode={this.state.isAlertMode}\r\n          realTimeAlert={this.state.realTimeAlert}\r\n        />\r\n\r\n        <PreviousStats alertsClient={AlertClient} />\r\n        {/* <Map /> */}\r\n        {/* Are these actually \"verified\" or official as for rocket launch (not alerts) data? */}\r\n        <PreviousOperations alertsClient={AlertClient} />\r\n        <FAQ />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}